// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Provider {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Basic Information (matching CSV structure)
  firstName     String
  lastName      String
  title         String   // MD, DO, NP, AP
  personalEmail String   @unique
  phone         String?
  fax          String?
  bio          String?  @db.Text
  languages    String[] // Array of spoken languages
  photoUrl     String?
  availability Boolean  @default(false)
  
  // Professional Details
  npi          String   @unique
  personalBookingLink String?
  address      String?
  
  // Personal Information (sensitive fields)
  dateOfBirth  DateTime?
  locationOfBirth String?
  stateLicenseNumbers String? // CSV of license numbers
  deaNumber    String?  // Sensitive - handle encryption in application layer
  ssn          String?  // Sensitive - handle encryption in application layer
  
  // Education
  medicalSchool String?
  residency     String?
  residencyStartYear Int?
  residencyGradYear  Int?
  
  // Relationships
  payerRelationships ProviderPayer[]
}

model Payer {
  id            String   @id @default(cuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  name          String
  isActive      Boolean  @default(true)
  isMedicaid    Boolean  @default(false)
  states        String[] // Array of states
  dateActive    DateTime
  reimbursementRate Float

  // Relationships
  providerRelationships ProviderPayer[]
}

model ProviderPayer {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  provider    Provider @relation(fields: [providerId], references: [id])
  providerId  String
  payer       Payer    @relation(fields: [payerId], references: [id])
  payerId     String

  @@unique([providerId, payerId])
} 